/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form.sudije;

import controler.Controler;
import domain.Igrac;
import domain.Sudija;
import domain.User;
import form.igraci.DodajIgracaForm;
import form.takmicenje.TakmicenjeForm;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Nikola
 */
public class DodajSudijuForm extends javax.swing.JFrame {
    int ucesceID;
    public static int tID;
    ArrayList<Sudija> listaSudija = new ArrayList<>();
    ArrayList<Igrac> listaIgraca = new ArrayList<>();

    /**
     * Creates new form DodajSudijuForm
     */
    public DodajSudijuForm(ArrayList<Sudija> listaSudija, ArrayList<Igrac> listaIgraca, int tID,int ucesceID) {
        initComponents();
        ModelTabeleSudije mts = new ModelTabeleSudije();
        tabelaSudije.setModel(mts);
        this.tID = tID;
        this.listaIgraca = listaIgraca;
        this.listaSudija = listaSudija;
        this.ucesceID=ucesceID;
        for (Sudija s : listaSudija) {
            mts.dodajUTabelu(s);
        }
        napuniCB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNapraviSudiju = new javax.swing.JButton();
        btnPotvrdi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaSudije = new javax.swing.JTable();
        cmbSudije = new javax.swing.JComboBox();
        btnDodajSudiju = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dodavanje sudije");

        btnNapraviSudiju.setText("Napravi sudiju");
        btnNapraviSudiju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNapraviSudijuActionPerformed(evt);
            }
        });

        btnPotvrdi.setText("Potvrdi");
        btnPotvrdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPotvrdiActionPerformed(evt);
            }
        });

        tabelaSudije.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaSudije);

        cmbSudije.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnDodajSudiju.setText("Dodaj");
        btnDodajSudiju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajSudijuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(cmbSudije, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(btnDodajSudiju)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnPotvrdi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNapraviSudiju, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNapraviSudiju)
                    .addComponent(cmbSudije, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDodajSudiju))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnPotvrdi)
                        .addGap(62, 62, 62))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNapraviSudijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNapraviSudijuActionPerformed
        NapraviSudijuDialog nsd = new NapraviSudijuDialog(this, true);
        nsd.setVisible(true);
    }//GEN-LAST:event_btnNapraviSudijuActionPerformed

    private void btnPotvrdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPotvrdiActionPerformed
        TakmicenjeForm tf = new TakmicenjeForm(tID, listaIgraca, listaSudija,ucesceID);
        tf.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnPotvrdiActionPerformed

    private void btnDodajSudijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajSudijuActionPerformed
        int br = cmbSudije.getItemCount();
        if (br == 0) {
            JOptionPane.showMessageDialog(null, "greska");
        } else {
            Sudija s = (Sudija) cmbSudije.getSelectedItem();
            ModelTabeleSudije mts = (ModelTabeleSudije) tabelaSudije.getModel();
            mts.dodajUTabelu(s);
            listaSudija.add(s);
            cmbSudije.removeItem(s);
        }
    }//GEN-LAST:event_btnDodajSudijuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DodajSudijuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DodajSudijuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DodajSudijuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DodajSudijuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DodajSudijuForm(new ArrayList<>(), new ArrayList<>(), tID,-1).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajSudiju;
    private javax.swing.JButton btnNapraviSudiju;
    private javax.swing.JButton btnPotvrdi;
    private javax.swing.JComboBox cmbSudije;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaSudije;
    // End of variables declaration//GEN-END:variables

    void dodajSudiju(Sudija s) {
        List<Igrac> listaIgr;
        List<Sudija> listaSud;
        int userID = 0;
        try {
            listaIgr = Controler.getInstance().vratiIgrace();
            listaSud = Controler.getInstance().vratiSudije();
            userID = vratiMaxUserID(listaIgr, listaSud);
            s.setUserID(userID);
            
            User u = new User(userID, s.getUsername(), s.getPassword(), s.getEmail());
            Controler.getInstance().dodajUsera(u);
            Controler.getInstance().dodajSudiju(s);
            JOptionPane.showMessageDialog(null, "Sudija unesen.");
        } catch (SQLException ex) {
            Logger.getLogger(DodajIgracaForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(DodajIgracaForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DodajIgracaForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        napuniCB();
    }

    private void napuniCB() {
        cmbSudije.removeAllItems();
        List<Sudija> lista;
        try {
            lista = Controler.getInstance().vratiSudije();
            for (Sudija s : lista) {
                if (nijeDuplikat(s)) {
                    cmbSudije.addItem(s);
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(DodajSudijuForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DodajSudijuForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private boolean nijeDuplikat(Sudija s) {
        for (Sudija sudija : listaSudija) {
            if (sudija.getUserID() == s.getUserID()) {
                return false;
            }
        }
        return true;
    }
    private int vratiMaxUserID(List<Igrac> listaIgr, List<Sudija> listaSud) {
        int max = 0;
        for (Igrac i : listaIgr) {
            for (Sudija s : listaSud) {
                if (i.getUserID() >= s.getUserID()) {
                    max = i.getUserID();
                } else {
                    max = s.getUserID();
                }

            }
        }
        return max + 1;
    }
}
